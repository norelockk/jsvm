"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpCode = void 0;
var OpCode;
(function (OpCode) {
    OpCode[OpCode["LOAD_INT"] = 0] = "LOAD_INT";
    OpCode[OpCode["LOAD_F64"] = 1] = "LOAD_F64";
    OpCode[OpCode["LOAD_STR"] = 2] = "LOAD_STR";
    OpCode[OpCode["LOAD_BOOL"] = 3] = "LOAD_BOOL";
    OpCode[OpCode["LOAD_SCOPE_DATA"] = 4] = "LOAD_SCOPE_DATA";
    OpCode[OpCode["MOVE_REG"] = 5] = "MOVE_REG";
    OpCode[OpCode["ADD"] = 6] = "ADD";
    OpCode[OpCode["SUB"] = 7] = "SUB";
    OpCode[OpCode["MUL"] = 8] = "MUL";
    OpCode[OpCode["LESS_OR_EQUAL"] = 9] = "LESS_OR_EQUAL";
    OpCode[OpCode["GREATER_OR_EQUAL"] = 10] = "GREATER_OR_EQUAL";
    OpCode[OpCode["EQUAL_STRICT"] = 11] = "EQUAL_STRICT";
    OpCode[OpCode["EQUAL"] = 12] = "EQUAL";
    OpCode[OpCode["NOT_EQUAL"] = 13] = "NOT_EQUAL";
    OpCode[OpCode["DIVIDE"] = 14] = "DIVIDE";
    OpCode[OpCode["LESS"] = 15] = "LESS";
    OpCode[OpCode["MORE"] = 16] = "MORE";
    OpCode[OpCode["BIT_SHIFT_LEFT"] = 17] = "BIT_SHIFT_LEFT";
    OpCode[OpCode["BIT_SHIFT_RIGHT"] = 18] = "BIT_SHIFT_RIGHT";
    OpCode[OpCode["BIT_SHIFT_RIGHT_ZERO_FILL"] = 19] = "BIT_SHIFT_RIGHT_ZERO_FILL";
    OpCode[OpCode["MODULO"] = 20] = "MODULO";
    OpCode[OpCode["BIT_AND"] = 21] = "BIT_AND";
    OpCode[OpCode["INSTANCE_OF"] = 22] = "INSTANCE_OF";
    OpCode[OpCode["IN"] = 23] = "IN";
    OpCode[OpCode["BIT_XOR"] = 24] = "BIT_XOR";
    OpCode[OpCode["NOT_EQUAL_STRICT"] = 25] = "NOT_EQUAL_STRICT";
    OpCode[OpCode["TERMINATE"] = 26] = "TERMINATE";
    OpCode[OpCode["LOAD_VAR"] = 27] = "LOAD_VAR";
    OpCode[OpCode["ASSIGN_VAR"] = 28] = "ASSIGN_VAR";
    OpCode[OpCode["ASSIGN_VAR_PIPE"] = 29] = "ASSIGN_VAR_PIPE";
    OpCode[OpCode["ASSIGN_VAR_BITWISE_AND"] = 30] = "ASSIGN_VAR_BITWISE_AND";
    OpCode[OpCode["ASSIGN_VAR_BITSHIFT_LEFT"] = 31] = "ASSIGN_VAR_BITSHIFT_LEFT";
    OpCode[OpCode["ASSIGN_VAR_PLUS"] = 32] = "ASSIGN_VAR_PLUS";
    OpCode[OpCode["ASSIGN_VAR_MINUS"] = 33] = "ASSIGN_VAR_MINUS";
    OpCode[OpCode["DECLARE"] = 34] = "DECLARE";
    OpCode[OpCode["REG_STR"] = 35] = "REG_STR";
    OpCode[OpCode["LOAD_GLOBAL"] = 36] = "LOAD_GLOBAL";
    OpCode[OpCode["LOAD_GLOBAL_SCOPE"] = 37] = "LOAD_GLOBAL_SCOPE";
    OpCode[OpCode["LOAD_PROP"] = 38] = "LOAD_PROP";
    OpCode[OpCode["MOV_REG_STACK"] = 39] = "MOV_REG_STACK";
    OpCode[OpCode["CALL"] = 40] = "CALL";
    OpCode[OpCode["NEW_CALL"] = 41] = "NEW_CALL";
    OpCode[OpCode["PROP_CALL"] = 42] = "PROP_CALL";
    OpCode[OpCode["CREATE_FUNC"] = 43] = "CREATE_FUNC";
    OpCode[OpCode["JMP"] = 44] = "JMP";
    OpCode[OpCode["TRY"] = 45] = "TRY";
    OpCode[OpCode["LEAVE_TRY"] = 46] = "LEAVE_TRY";
    OpCode[OpCode["RETURN"] = 47] = "RETURN";
    OpCode[OpCode["SELF_FN_REF"] = 48] = "SELF_FN_REF";
    OpCode[OpCode["JMP_FALSE"] = 49] = "JMP_FALSE";
    OpCode[OpCode["JMP_TRUE"] = 50] = "JMP_TRUE";
    OpCode[OpCode["MOV_ARG_TO_VAR"] = 51] = "MOV_ARG_TO_VAR";
    OpCode[OpCode["REG_SCOPE_PARENTS"] = 52] = "REG_SCOPE_PARENTS";
    OpCode[OpCode["PLUS_PLUS"] = 53] = "PLUS_PLUS";
    OpCode[OpCode["MINUS_MINUS"] = 54] = "MINUS_MINUS";
    OpCode[OpCode["THIS"] = 55] = "THIS";
    OpCode[OpCode["ASSIGN_PROP"] = 56] = "ASSIGN_PROP";
    OpCode[OpCode["ASSIGN_PROP_PLUS"] = 57] = "ASSIGN_PROP_PLUS";
    OpCode[OpCode["ASSIGN_PROP_MINUS"] = 58] = "ASSIGN_PROP_MINUS";
    OpCode[OpCode["UNARY_NOT"] = 59] = "UNARY_NOT";
    OpCode[OpCode["UNARY_INVERT"] = 60] = "UNARY_INVERT";
    OpCode[OpCode["UNARY_NEGATE"] = 61] = "UNARY_NEGATE";
    OpCode[OpCode["UNARY_TYPEOF"] = 62] = "UNARY_TYPEOF";
    OpCode[OpCode["ARGUMENTS_REF"] = 63] = "ARGUMENTS_REF";
    OpCode[OpCode["LOAD_ARRAY"] = 64] = "LOAD_ARRAY";
    OpCode[OpCode["LOAD_OBJECT"] = 65] = "LOAD_OBJECT";
    OpCode[OpCode["LOAD_NULL"] = 66] = "LOAD_NULL";
    OpCode[OpCode["LOAD_UNDEFINED"] = 67] = "LOAD_UNDEFINED";
    OpCode[OpCode["THROW"] = 68] = "THROW";
    OpCode[OpCode["OBJECT_PLUS_PLUS"] = 69] = "OBJECT_PLUS_PLUS";
    OpCode[OpCode["OBJECT_MINUS_MINUS"] = 70] = "OBJECT_MINUS_MINUS";
    OpCode[OpCode["MOV_ERR_TO_VAR"] = 71] = "MOV_ERR_TO_VAR";
    OpCode[OpCode["UNARY_VOID"] = 72] = "UNARY_VOID";
    OpCode[OpCode["PIPE"] = 73] = "PIPE";
    OpCode[OpCode["LOAD_REGEX"] = 74] = "LOAD_REGEX";
    OpCode[OpCode["ASSIGN_PROPERTY_ZERO_RIGHT_SHIFT_FILL"] = 75] = "ASSIGN_PROPERTY_ZERO_RIGHT_SHIFT_FILL";
    OpCode[OpCode["ASSIGN_PROPERTY_PIPE"] = 76] = "ASSIGN_PROPERTY_PIPE";
    OpCode[OpCode["ASSIGN_PROPERTY_MUL"] = 77] = "ASSIGN_PROPERTY_MUL";
    OpCode[OpCode["ASSIGN_VAR_ZERO_RIGHT_SHIFT_FILL"] = 78] = "ASSIGN_VAR_ZERO_RIGHT_SHIFT_FILL";
    OpCode[OpCode["UNARY_DELETE"] = 79] = "UNARY_DELETE";
    OpCode[OpCode["UNARY_DELETE_MEMBER_EXPRESSION"] = 80] = "UNARY_DELETE_MEMBER_EXPRESSION";
    OpCode[OpCode["ASSIGN_VAR_XOR"] = 81] = "ASSIGN_VAR_XOR";
    OpCode[OpCode["ASSIGN_VAR_REMAINDER"] = 82] = "ASSIGN_VAR_REMAINDER";
    OpCode[OpCode["UNARY_PLUS"] = 83] = "UNARY_PLUS";
    OpCode[OpCode["ASSIGN_PROPERTY_XOR"] = 84] = "ASSIGN_PROPERTY_XOR";
    OpCode[OpCode["ASSIGN_PROPERTY_BIT_AND"] = 85] = "ASSIGN_PROPERTY_BIT_AND";
    OpCode[OpCode["ASSIGN_VAR_MUL"] = 86] = "ASSIGN_VAR_MUL";
    OpCode[OpCode["ASSIGN_VAR_DIV"] = 87] = "ASSIGN_VAR_DIV";
    OpCode[OpCode["ASSIGN_PROPERTY_DIV"] = 88] = "ASSIGN_PROPERTY_DIV";
})(OpCode = exports.OpCode || (exports.OpCode = {}));
;
